name: Publish release

on:
  workflow_dispatch:
    inputs:
      release-name:
        description: "Release to create"
        required: true
      tag:
        description: "Tag to create"
        required: true
      priority:
        description: "Priority of the release"
        required: false
        default: "HIGH"
      message:
        description: "Additional message for the release"
        required: true
        default: "New release - upgrade as soon as possible."
      pre-release:
        description: "Whether to publish pre-release"
        required: true
        default: true

jobs:
  on-success:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download binary artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          branch: master
          workflow: binary-build.yml
          workflow_conclusion: success

      - name: Download runtime artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          branch: master
          workflow: runtime-build.yml
          workflow_conclusion: success

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create checksums file
        run: |
          find . -type f -name "opportunity-standalone-*" -exec sha256sum {} \; >> SHA256CHECKSUMS
          find . -type f -name "opportunity_runtime.compact.wasm" -exec sha256sum {} \; >> SHA256CHECKSUMS
          find . -type f -name "standard-collator-*" -exec sha256sum {} \; >> SHA256CHECKSUMS
          find . -type f -name "standard_runtime.compact.wasm" -exec sha256sum {} \; >> SHA256CHECKSUMS

      - name: Archive runtime outputs
        run: |
          tar -cvzf runtime_build.tar.gz opportunity-runtime-* standard-runtime-*

      - name: Build Changelog
        id: build-changelog
        uses: mikepenz/release-changelog-builder-action@v2.4.1
        if: github.ref == 'refs/heads/master'
        with:
          configuration: ".github/release_notes_config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: ncipollo/release-action@v1.8.8
        id: release-step
        if: github.ref == 'refs/heads/master'
        with:
          artifacts: "SHA256CHECKSUMS, runtime_build.tar.gz, standard-substrate-*/*, opportunity-runtime-*/**/opportunity_runtime.compact.wasm, standard-runtime-*/**/standard_runtime.compact.wasm"
          allowUpdates: true
          artifactErrorsFailBuild: true
          name: ${{ github.event.inputs.release-name }}
          tag: ${{ github.event.inputs.tag }}
          commit: ${{ github.sha }}
          body: ${{ steps.build-changelog.outputs.changelog }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          prerelease: ${{ github.event.inputs.pre-release == 'true' && 'true' || 'false' }}

      - name: Public Discord notification
        uses: Ilshidur/action-discord@0.3.2
        if: ${{ github.event.inputs.pre-release == 'false' && github.ref == 'refs/heads/master' }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          # DISCORD_EMBEDS: {
          #   "embeds": [
          #   {
          #   "title": "Priority: **${{ github.event.inputs.priority }}**",
          #   "color": ""
          #   },
          #   {
          #   "title": "Information: ${{ github.event.inputs.message }},
          #   "color": ""
          #   },
          #   {
          #   "title": "Release URL",
          #   "url": "${{ steps.release-step.outputs.html_url }}",
          #   "color": ""
          #   },
          #   ]
          # }
        with:
          args: |
            "<@&808602414138654752> - New release in ${{ github.repository }} - **${{ github.event.inputs.release-name }}**.
            Priority: **${{ github.event.inputs.priority }}**
            Information: ${{ github.event.inputs.message }}
            Link: ${{ steps.release-step.outputs.html_url }}"

      # - name: Public Telegram notification
      #   uses: appleboy/telegram-action@0.1.1
      #   with:
      #     to: ${{ secrets.TELEGRAM_TOKEN }}
      #     token: ${{ secrets.TELEGRAM_TOKEN }}
      #     message: |
      #       "New release in ${{ github.repository }} - ${{ github.event.inputs.release-name }}".
      #       Details: ${{ steps.release-step.outputs.html_url }}"

      - name: Internal Slack Notification
        uses: bryannice/gitactions-slack-notification@2.0.0
        if: github.ref == 'refs/heads/master'
        env:
          SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Details: ${{ steps.release-step.outputs.html_url }}"
          SLACK_TITLE: "New release in ${{ github.repository }} - ${{ github.event.inputs.release-name }}"
          SLACK_COLOR: "#008000"
          SLACK_CHANNEL: "github-releases"
          SLACK_USERNAME: "Standard Tech Bot"
