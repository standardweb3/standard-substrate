name: Build and Publish Docker

on:
  release:
    types:
      - published

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  docker:
    strategy:
      matrix:
        platform: [linux/amd64]
        release: [opportunity-standalone, standard-collator]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: binary-build.yml

      - name: Display structure of downloaded files
        run: ls -R

      - name: Artifact move - ${{ matrix.platform }} - ${{ matrix.release }}
        if: ${{ matrix.platform == 'linux/amd64' }}
        run: |
          mv ${{ matrix.release }}-linux-x86_64/${{ matrix.release }}-linux-x86_64 ./${{ matrix.release }}

      - name: Artifact move - ${{ matrix.platform }} - ${{ matrix.release }}
        if: ${{ matrix.platform == 'darwin/amd64' }}
        run: |
          mv ${{ matrix.release }}-darwin-x86_64/${{ matrix.release }}-darwin-x86_64 ./${{ matrix.release }}

      - name: Make executable - ${{ matrix.platform }} - ${{ matrix.release }}
        run: |
          chmod +x ./${{ matrix.release }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images - ${{ matrix.platform }} - ${{ matrix.release }}
        id: docker_build-${{ matrix.release }}
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Docker/Dockerfile.release
          platforms: ${{ matrix.platform }}
          build-args: BINARY=${{ matrix.release }}
          tags: |
            standardprotocol/${{ matrix.release }}:${{ github.event.release.tag_name }}
            standardprotocol/${{ matrix.release }}:latest
          push: true

      - name: Run Snyk to check for vulnerabilities - ${{ matrix.release }}
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: standardprotocol/${{ matrix.release }}:latest
          args: --file=./Docker/Dockerfile.release

      - name: Image digest
        run: |
          echo ${{ steps.docker_build.outputs.digest }}
